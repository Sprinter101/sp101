{namespace sv.lSberVmeste.bDonateBlock.Template} 

/**
 * @constructor
 * @extends cl.iControl.Template
 */
{template .block}
    {call .init data="all"/}
{/template}

/**
 * @override
 * @param params {{
 *     config: {
 *         sumType: string
 *     }
 *  }}
 */
{template .body autoescape="strict" kind="html"}
    {let $sumType: $params.config.sumType/}
    <div class="{call .rootClass/}__inner-wrap">
        <div class="{call .rootClass/}__choice__fixed-sum{if $sumType != 'fixedSum'}{sp}{call .hidden/}{/if}">
            {call .inputTip}
                {param sumType: $sumType /}
            {/call}
            {call .input}
                {param sumType: $sumType /}
            {/call}
        </div>
         <div class="{call .rootClass/}__choice__income-percent{if $sumType != 'income'}{sp}{call .hidden/}{/if}">
            <div class="{call .rootClass/}__user-income">
                {call .inputTip}
                    {param sumType: $sumType /}
                {/call}
                {call .input}
                    {param sumType: $sumType /}
                {/call}
            </div>
            <div class="{call .rootClass/}__donation-percent">
            {call .sliderTip /}
            {call .slider /}
            </div>
            {call .result}
                {param sumType: $sumType /}
            {/call}
        </div>
        <div class="{call .rootClass/}__button-wrapper">
        {let $buttonContent: $params.config.sumType == 'fixedSum' ? 'Продолжить' : 'Готово'/}
            {call .renderChild}
                  {param params: [
                        'type': 'ButtonSber',
                        'renderParams': [
                            'data': [
                                'content': $buttonContent,
                            ],
                            'config': ['customClasses': 
                                ['b-donate-block__button_ready']
                            ]
                        ]
                    ]/}
            {/call}
        </div>
    </div>
{/template}

/**
 * template for sum or income input's tip
 * @param sumType string
 */
{template .inputTip autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__input-tip">
    {if $sumType == 'fixedSum'}
         Сумма ежемесячного пожертвования
    {else}
        Укажите свой месячный доход
    {/if}
    </div>
{/template}

/**
 * template for donation slider's tip
 */
{template .sliderTip autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__slider-tip">
        Финансирование
    </div>
{/template}

/**
 * template for input
 * @param sumType string
 */
{template .input autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__input-fixed{if $sumType != 'fixedSum'}{sp}{call .hidden/}{/if}">
         {call .renderChild}
              {param params: [
                    'type': 'InputSber',
                    'renderParams': [
                        'data': [
                            'inputType': 'text',
                            'placeholder': '0'
                        ],
                        'config': [
                            'validations': [
                                'notEmpty',
                                'digits',
                                'maxDonation'
                            ],
                            'constraints': [
                                'digitsOnly',
                                'charactersLimit',
                                'noLeadingZero'
                            ],
                            'customClasses': ['b-donate-block__input_fixed-sum']
                        ]
                    ]
                ]/}
        {/call}
    </div>
    <div class="{call .rootClass/}__input-income{if $sumType != 'income'}{sp}{call .hidden/}{/if}">
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': [
                        'inputType': 'text',
                        'placeholder': '0'
                    ],
                    'config': [
                        'validations': [
                            'notEmpty',
                            'digits',
                            'maxDonation'
                        ],
                        'constraints': [
                            'digitsOnly',
                            'charactersLimit',
                            'noLeadingZero'
                        ],
                        'customClasses': ['b-donate-block__input_income']
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}

/**
 * temporary template for donation slider
 */
{template .slider autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__slider">
        ПОЛЗУНОК
    </div>
{/template}

/**
 * template for result's phrase
 * @param sumType string
 */
{template .result autoescape="strict" kind="html"}
    <div class="{call .rootClass/}__result{if $sumType != 'income'}{sp}{call .hidden/}{/if}">
        <div class="{call .rootClass/}__result-phrase">
        Итого в месяц
        </div>
        <div class="{call .rootClass/}__result-sum">
            370Р
        </div>
    </div>
{/template}


/**
 * @override
 */
{template .rootClass}
    b-donate-block
{/template}

/**
 * Additional class for hiding unwanted 
 * element for this tab content
 */
{template .hidden}
    i-utils__hidden
{/template}