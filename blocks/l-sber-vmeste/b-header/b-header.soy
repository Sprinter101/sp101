{namespace sv.lSberVmeste.bHeader.Template}

/**
 * @constructor
 * @extends cl.iControl.Template
 */
{template .header}
    {call .init data="all"/}
{/template}

/**
 * @override
 * @param params {{
 *     config: {
 *         headerType: string
 *     }
 *  }}
 */
{template .body}
    {let $headerType: $params.config.headerType/}
    <div class="{call .rootClass/}__wrapper{sp}{call .rootClass/}__wrapper_{$headerType}">
        {switch $headerType}
            {case 'start'}
                <div class="{call .rootClass/}__logo-wrapper">
                    {call .renderChild}
                        {param params: [
                            'type': 'IconSber',
                            'renderParams': [
                                'data': [],
                                'config': [
                                'iconStyles': ['logo-sber']
                                ]
                            ]
                        ]/}
                    {/call}
                </div>
                <div class="{call .rootClass/}__button_me-wrapper">
                    {call .renderChild}
                        {param params: [
                            'type': 'ButtonSber',
                            'renderParams': [
                                'data': [
                                    'content': 'Я',
                                ],
                                'config': [
                                'buttonStyles': 
                                ['width_m', 'height_big', 'font_SFUI'],
                                'customClasses': 
                                    ['b-header__button_me']
                                ]
                            ]
                        ]/}
                    {/call}
                </div>
                {call .more /}
            {case 'directions'}
                <div class="{call .rootClass/}__icon_arrow_back-wrapper">
                    {call .renderChild}
                        {param params: [
                            'type': 'IconSber',
                            'renderParams': [
                                'data': [],
                                'config': [
                                    'iconStyles': ['arrow-back_white']
                                ]
                            ]
                        ]/}
                    {/call}
                </div>
                <div class="{call .rootClass/}__button_me-wrapper">
                    {call .renderChild}
                              {param params: [
                                    'type': 'ButtonSber',
                                    'renderParams': [
                                        'data': [
                                            'content': 'Я',
                                        ],
                                        'config': [
                                        'buttonStyles': 
                                        ['width_m', 'height_big', 'font_SFUI'],
                                        'customClasses': 
                                            ['b-header__button_me']
                                        ]
                                    ]
                                ]/}
                    {/call}
                </div>
                {call .more /}
            {case 'card'}
                <div class="{call .rootClass/}__icon_arrow_back-wrapper">
                    {call .renderChild}
                          {param params: [
                                'type': 'IconSber',
                                'renderParams': [
                                    'data': [],
                                    'config': [
                                        'iconStyles': ['arrow-back_grey']
                                    ]
                                ]
                            ]/}
                        {/call}
                    </div>
                    {call .cardCategory /}
                    <div class="{call .rootClass/}__icon_share-wrapper">
                    {call .renderChild}
                      {param params: [
                            'type': 'IconSber',
                            'renderParams': [
                                'data': [],
                                'config': [
                                    'iconStyles': ['share']
                                ]
                            ]
                        ]/}
                    {/call}
                    </div>
            {case 'donate'}
            <div class="{call .rootClass/}__icon_arrow_back-wrapper">
                {call .renderChild}
                      {param params: [
                            'type': 'IconSber',
                            'renderParams': [
                                'data': [],
                                'config': [
                                    'iconStyles': ['arrow-back_white']
                                ]
                            ]
                        ]/}
                {/call}
            </div>
                {call .donate__type /}
                {call .donate__tip /}
        {/switch}
    </div>
{/template}

/**
 * Div for 'more info' link
 */
{template .more}
    <div class="{call .rootClass/}__more-link">
        <div class="{call .rootClass/}__more-link-text">
            О проекте
        </div>
    </div>
{/template}

/**
 * Div for cards filter category
 */
{template .cardCategory}
    <div class="{call .rootClass/}__card-category">
        ТЕМА
    </div>
{/template}

/**
 * Template for donate type offer
 */
{template .donate__type}
    <div class="{call .rootClass/}__donate-type">
        Выберите тип финансирования
    </div>
{/template}

/**
 * Div for tip about donate type
 */
{template .donate__tip}
    <div class="{call .rootClass/}__donate-tip">
        <div class="{call .rootClass/}__donate-tip-text">
            Что делать?
        </div>
    </div>
{/template}

/**
 * @override
 */
{template .rootClass}
    b-header
{/template}

/**
* @param? params {{
 *     config: {
 *         headerType: string
 *     }
 *  }}
*/
{template .additionalClasses}
    {let $headerType: $params.config.headerType/}
        {call .rootClass/}_{$headerType}
{/template}
