{namespace sv.lSberVmeste.bHeader.Template}

/**
 * @constructor
 * @extends cl.iControl.Template
 */
{template .header}
    {call .init data="all"/}
{/template}

/**
 * @override
 * @param params {{
 *     config: {
 *         headerType: string,
 *         category: ?string
 *     }
 *  }}
 */
{template .body}
    {let $headerType: $params.config.headerType/}
    <div class="{call .rootClass/}__wrapper{sp}{call .rootClass/}__wrapper_{$headerType}">
        {if $headerType != 'start'}
            <div class="{call .rootClass/}__logo-wrapper{sp}{call .hidden/}">
        {else}
            <div class="{call .rootClass/}__logo-wrapper">
        {/if}
            {call .renderChild}
                {param params: [
                    'type': 'IconSber',
                    'renderParams': [
                        'data': [],
                        'config': [
                        'iconStyles': ['logo-sber']
                        ]
                    ]
                ]/}
            {/call}
            </div>
        {if $headerType == 'start'}
            <div class="{call .rootClass/}__icon_arrow_back-wrapper{sp}{call .hidden/}">
        {elseif $headerType != 'card'}
            <div class="{call .rootClass/}__icon_arrow_back-wrapper">
        {else}
            <div class="{call .rootClass/}__icon_arrow_back-wrapper_white-header">
        {/if}
            {let $arrowColor: ($headerType == 'card') ? 'arrow-back_grey' : 'arrow-back_white'/}
                {call .renderChild}
                    {param params: [
                        'type': 'IconSber',
                        'renderParams': [
                            'data': [],
                            'config': [
                                'iconStyles': ['arrow-back', $arrowColor]
                            ]
                        ]
                    ]/}
                {/call}
            </div>
        {if $headerType == 'card' or $headerType == 'donate'}
            <div class="{call .rootClass/}__button_me-wrapper{sp}{call .hidden/}">
        {else}
            <div class="{call .rootClass/}__button_me-wrapper">
        {/if}
            {call .renderChild}
                {param params: [
                    'type': 'ButtonSber',
                    'renderParams': [
                        'data': [
                            'content': 'Я',
                        ],
                        'config': [
                        'buttonStyles': 
                        ['width_m', 'height_big', 'font_SFUI'],
                        'customClasses': 
                            ['b-header__button_me']
                        ]
                    ]
                ]/}
            {/call}
            </div>
        {if $headerType == 'card'}
            {let $category: $params.config.category/}
                {call .cardCategory }
                    {param category: $category /}
                {/call}
        {elseif $headerType == 'donate'}
            {call .donate__type /}
        {/if}
        {if $headerType == 'start' or $headerType == 'list'}
            {call .more /}
        {elseif $headerType == 'card'}
            <div class="{call .rootClass/}__icon_share-wrapper">
                {call .renderChild}
                    {param params: [
                        'type': 'IconSber',
                        'renderParams': [
                            'data': [],
                            'config': [
                                'iconStyles': ['share']
                            ]
                        ]
                    ]/}
                {/call}
            </div>
        {elseif $headerType == 'donate'}
            {call .donate__tip /}
        {/if}
    </div>
{/template}

/**
 * Div for 'more info' link
 */
{template .more}
    <div class="{call .rootClass/}__more-link">
        <div class="{call .rootClass/}__more-link-text">
            О проекте
        </div>
    </div>
{/template}

/**
 * Div for cards' filter category
 * @param category {string}
 */
{template .cardCategory}
    <div class="{call .rootClass/}__card-category">
        {if $category == 'theme'}
        ТЕМА
        {elseif $category == 'direction'}
        НАПРРАВЛЕНИЕ
        {else}
        ФОНД
        {/if}
    </div>
{/template}

/**
 * Template for donate type offer
 */
{template .donate__type}
    <div class="{call .rootClass/}__donate-type">
        Выберите тип финансирования
    </div>
{/template}

/**
 * Div for tip about donate type
 */
{template .donate__tip}
    <div class="{call .rootClass/}__donate-tip">
        <div class="{call .rootClass/}__donate-tip-text">
            Что делать?
        </div>
    </div>
{/template}

/**
 * @override
 */
{template .rootClass}
    b-header
{/template}

/**
* @param? params {{
 *     config: {
 *         headerType: string
 *     }
 *  }}
*/
{template .additionalClasses}
    {let $headerType: $params.config.headerType/}
        {call .rootClass/}_{$headerType}
{/template}

/**
 * Additional class for hiding unwanted 
 * for this headerType element
 */
{template .hidden}
    i-utils__hidden
{/template}