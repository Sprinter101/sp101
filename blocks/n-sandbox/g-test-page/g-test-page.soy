{namespace sv.gTestPage.Template}

/**
 * @constructor
 * @extends cl.iControl.Template
 */
{template .page}
    {call .init data="all"/}
{/template}

/**
 * @override
 */
{template .body}
    <div class="{call .rootClass /}__title">Инпут</div>
    {call .input_ /}
{/template}

/**
 * @override
 */
{template .rootClass}
    b-test-page
{/template}

/**
* Input template
*/
{template .input_ autoescape="strict" kind="html"}
    <div class="b-test-page__input-block">
        <div class="b-test-page__input-title">digits, maxDonation:</div>
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': ['inputType': 'number'],
                    'config': [
                        'validations': [
                            'notEmpty',
                            'digits',
                            'maxDonation',
                            'minDonation'
                        ],
                        'constraints': [
                            'digitsOnly',
                            'charactersLimit',
                            'noLeadingZero'
                        ],
                          'valueParams': [
                           'maxNumber': 500000,
                           'maxCharacters': 6,
                           'minDonation': 100
                        ],
                    ]
                ]
            ]/}
        {/call}
    </div>

    <div class="b-test-page__input-block">
        <div class="b-test-page__input-title">name:</div>
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': ['inputType': 'text'],
                    'config': [
                        'validations': ['notEmpty'],
                        'constraints': ['name']
                    ]
                ]
            ]/}
        {/call}
    </div>

    <div class="b-test-page__input-block">
        <div class="b-test-page__input-title">phone number:</div>
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': ['inputType': 'number', 'value': '+7'],
                    'config': [
                        'validations': ['phoneNumber'],
                        'constraints': ['phoneNumber']
                    ]
                ]
            ]/}
        {/call}
    </div>

    <div class="b-test-page__input-block">
        <div class="b-test-page__input-title">placeholder:</div>
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': [
                        'inputType': 'text',
                        'placeholder': 'placeholder'
                    ],
                    'config': [
                        'validations': ['notEmpty'],
                        'constraints': ['noLeadingZero']
                    ]
                ]
            ]/}
        {/call}
    </div>

    <div class="b-test-page__input-block b-test-page__input-block_white">
        <div class="b-test-page__input-title">label:</div>
        {call .renderChild}
            {param params: [
                'type': 'InputSber',
                'renderParams': [
                    'data': [
                        'inputType': 'text',
                        'placeholder': 'placeholder',
                        'label': 'label text',
                        'customClasses': ['g-input_profile']
                    ],
                    'config': [
                        'validations': ['notEmpty'],
                        'constraints': ['noLeadingZero'],
                        'customClasses': [
                            'g-input_profile'
                        ]
                    ]
                ]
            ]/}
        {/call}
    </div>
{/template}
